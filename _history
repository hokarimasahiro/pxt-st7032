{"entries":[{"timestamp":1744172207642,"editorVersion":"7.0.61","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[-1,"basic.forever(function () {\n\t\n})"],[0,"\n"]],"start1":0,"start2":0,"length1":33,"length2":1}]},{"type":"edited","filename":"pxt.json","patch":[{"diffs":[[0,"ain."],[-1,"ts\",\n        \"README.md\",\n        \"st7032.ts\"\n    ],\n    \"preferredEditor\": \"tsprj\""],[1,"blocks\",\n        \"main.ts\",\n        \"README.md\"\n    ],\n    \"additionalFilePaths\": []"],[0,"\n}\n"]],"start1":174,"start2":174,"length1":90,"length2":91}]},{"type":"removed","filename":"main.blocks","value":"<xml xmlns=\"http://www.w3.org/1999/xhtml\">\n  <block type=\"pxt-on-start\"></block>\n  <block type=\"device_forever\"></block>\n</xml>"},{"type":"added","filename":"st7032.ts","value":"/**\n * lcd st7032 blocks\n */\n//% weight=100 color=#0fbc11 icon=\"\"\nnamespace st7032 {\n    let i2cAddress = 0x3f;\n    function putReg(reg:number,data: number) {\n        let buf = pins.createBuffer(2);\n        buf[0] = reg;\n        buf[1] = data;\n        pins.i2cWriteBuffer(i2cAddress, buf);\n    }\n    /**\n     * setPosition\n     */\n    //% blockId=\"setClock\" block=\"set clock\"\n    export function setClock(): void {\n\n        let buf = pins.createBuffer(8);\n\n        buf[0] = REG_SECOND;\n        buf[1] = DecToHex(dateTime[clockData.second]);\n        buf[2] = DecToHex(dateTime[clockData.minute]);\n        buf[3] = DecToHex(dateTime[clockData.hour]);\n        buf[4] = 0x01 << getWeekday(convDateTime(\n            dateTime[clockData.year],\n            dateTime[clockData.month],\n            dateTime[clockData.day],\n            dateTime[clockData.hour],\n            dateTime[clockData.minute],\n            dateTime[clockData.second]\n        ));\n        buf[5] = DecToHex(dateTime[clockData.day]);\n        buf[6] = DecToHex(dateTime[clockData.month]);\n        buf[7] = DecToHex(dateTime[clockData.year] % 100);\n\n        pins.i2cWriteBuffer(I2C_ADDR, buf)\n    }\n}\n"}]},{"timestamp":1744172659656,"editorVersion":"7.0.61","changes":[{"type":"edited","filename":"st7032.ts","patch":[{"diffs":[[0," set"],[-1,"I2cAddress"],[1,"Position"],[0,"\n   "]],"start1":311,"start2":311,"length1":18,"length2":16},{"diffs":[[0," set"],[-1,"Address(ad:number"],[1,"Clock("],[0,"): v"]],"start1":396,"start2":396,"length1":25,"length2":14},{"diffs":[[0,"d {\n"],[1,"\n"],[0,"        "],[-1,"i2cAddress = ad"],[1,"let buf = pins.createBuffer(8)"],[0,";\n"],[1,"\n"],[0,"    "],[-1,"}\n"],[0,"    "],[-1,"/**\n     * initLcd\n     */\n    //% blockId=\"initLcd\" block=\"init LCD\"\n    export function initLcd(): void {\n\n    }"],[1,"buf[0] = REG_SECOND;\n        buf[1] = DecToHex(dateTime[clockData.second]);\n        buf[2] = DecToHex(dateTime[clockData.minute]);\n        buf[3] = DecToHex(dateTime[clockData.hour]);\n        buf[4] = 0x01 << getWeekday(convDateTime(\n            dateTime[clockData.year],"],[0,"\n    "],[-1,"/**\n"],[1,"  "],[0,"     "],[-1,"* setPosition"],[1," dateTime[clockData.month],"],[0,"\n     "],[-1,"*/\n"],[0,"    "],[-1,"//% blockId=\"setClock\" block=\"set clock\"\n    export function setClock(): void {\n\n        let buf = pins.createBuffer(8"],[1,"   dateTime[clockData.day],\n            dateTime[clockData.hour],\n            dateTime[clockData.minute],\n            dateTime[clockData.second]\n        ));\n        buf[5] = DecToHex(dateTime[clockData.day]);\n        buf[6] = DecToHex(dateTime[clockData.month]);\n        buf[7] = DecToHex(dateTime[clockData.year] % 100"],[0,");\n\n"]],"start1":412,"start2":412,"length1":315,"length2":697},{"diffs":[[0,"WriteBuffer("],[-1,"i2cAddress"],[1,"I2C_ADDR"],[0,", buf)\n    }"]],"start1":1125,"start2":1125,"length1":34,"length2":32}]}]},{"timestamp":1744173016450,"editorVersion":"7.0.61","changes":[{"type":"edited","filename":"st7032.ts","patch":[{"diffs":[[0," put"],[-1,"Command("],[1,"Reg(reg:number,"],[0,"data"]],"start1":125,"start2":125,"length1":16,"length2":23},{"diffs":[[0,"] = "],[-1,"0x00"],[1,"reg"],[0,";\n  "]],"start1":213,"start2":213,"length1":12,"length2":11},{"diffs":[[0,", buf);\n"],[-1,""],[0,"    }\n"],[1,"    /**\n     * setI2cAddress\n     */\n"],[0,"    //% "]],"start1":283,"start2":283,"length1":22,"length2":59}]}]},{"timestamp":1744173605927,"editorVersion":"7.0.61","changes":[{"type":"edited","filename":"st7032.ts","patch":[{"diffs":[[0,"    "],[-1,"let topAddress = [0x00,0x40,0x14,0x54];\n\n    //% blockId=\"putCommand\"\n    export "],[0,"func"]],"start1":113,"start2":113,"length1":89,"length2":8},{"diffs":[[0,"data"],[-1," >> 0;\n        pins.i2cWriteBuffer(i2cAddress, buf);\n    }\n\n    //% blockId=\"putData\"\n    export function putData(data: number) {\n        let buf = pins.createBuffer(2);\n        buf[0] = 0x40;\n        buf[1] = data >> 0"],[0,";\n  "]],"start1":233,"start2":233,"length1":227,"length2":8},{"diffs":[[0,"ss, buf);\n    }\n"],[-1,"\n"],[0,"    //% blockId="]],"start1":275,"start2":275,"length1":33,"length2":32},{"diffs":[[0,"kId=\"set"],[-1,"Address"],[1,"Clock\" block=\"set clock"],[0,"\"\n    ex"]],"start1":303,"start2":303,"length1":23,"length2":39},{"diffs":[[0,"initLcd\""],[1," block=\"init LCD\""],[0,"\n    exp"]],"start1":465,"start2":465,"length1":16,"length2":33},{"diffs":[[0,"d {\n"],[1,"\n"],[0,"    "],[1,"}\n"],[0,"    "],[-1,"putCommand(0x38);\n        putCommand(0x01);\n        putCommand(0x02);\n        putCommand(0x0c);\n    }\n\n    //% blockId=\"setPosition\"\n    export function setPosition(x:number,y:number): void {\n        if((x > 3) || (y > 20)) return;\n\n        putCommand( 0x80 + topAddress[x] + y);\n    }\n    //% blockId=\"writeData"],[1,"/**\n     * setPosition\n     */\n    //% blockId=\"setClock\" block=\"set clock"],[0,"\"\n  "]],"start1":525,"start2":525,"length1":328,"length2":93},{"diffs":[[0,"ion "],[-1,"writeData(dt:string"],[1,"setClock("],[0,"): v"]],"start1":632,"start2":632,"length1":27,"length2":17},{"diffs":[[0,"d {\n"],[1,"\n"],[0,"        "],[-1,"for(let i = 0;i < dt.length;i++)\n            putData()\n        if ((x > 3) || (y > 20)) return;\n\n        putCommand(0x80 + topAddress[x] + y);"],[1,"let buf = pins.createBuffer(8);\n\n        pins.i2cWriteBuffer(i2cAddress, buf)"],[0,"\n   "]],"start1":651,"start2":651,"length1":158,"length2":94}]}]},{"timestamp":1744174204064,"editorVersion":"7.0.61","changes":[{"type":"edited","filename":"pxt.json","patch":[{"diffs":[[0,"les\": [\n"],[1,"        \"main.ts\",\n"],[0,"        "]],"start1":156,"start2":156,"length1":16,"length2":35},{"diffs":[[0,".ts\""],[-1,",\n        \"test.ts\""],[0,"\n   "]],"start1":219,"start2":219,"length1":27,"length2":8}]},{"type":"edited","filename":"st7032.ts","patch":[{"diffs":[[0,"ata("],[-1,"dt.charCodeAt(i)"],[1,")\n        if ((x > 3) || (y > 20)) return;\n\n        putCommand(0x80 + topAddress[x] + y"],[0,");\n "]],"start1":1225,"start2":1225,"length1":24,"length2":95}]},{"type":"added","filename":"test.ts","value":"basic.forever(function() {\n    st7032.initLcd();\n    basic.pause(500)\n    st7032.setPosition(0, 0);\n    st7032.writeData(\"lcd write block\");\n    basic.pause(100)\n    st7032.setPosition(1, 0);\n    st7032.writeData(\"4 st7032 controller\");\n    basic.pause(100)\n    st7032.setPosition(2, 0);\n    st7032.writeData(\"controlled micro:bit\");\n    basic.pause(100)\n    st7032.setPosition(3, 0);\n    st7032.writeData(\"by masahiro hokari\");\n    basic.pause(1000)\n})"}]},{"timestamp":1744174792865,"editorVersion":"7.0.61","changes":[{"type":"edited","filename":"pxt.json","patch":[{"diffs":[[0," ],\n"],[-1,"    \"testFiles\": [\n        \"test.ts\"\n    ],\n"],[0,"    "]],"start1":227,"start2":227,"length1":52,"length2":8}]},{"type":"edited","filename":"test.ts","patch":[{"diffs":[[0,"    basic.pause("],[-1,"2"],[1,"1"],[0,"00)\n    st7032.s"]],"start1":141,"start2":141,"length1":33,"length2":33},{"diffs":[[0,"ta(\""],[-1,"for micro:bit"],[1,"4 st7032 controller"],[0,"\");\n"]],"start1":210,"start2":210,"length1":21,"length2":27},{"diffs":[[0,"    basic.pause("],[-1,"2"],[1,"1"],[0,"00)\n    st7032.s"]],"start1":237,"start2":237,"length1":33,"length2":33},{"diffs":[[0,"teData(\""],[1,"controlled micro:bit"],[0,"\");\n    "]],"start1":302,"start2":302,"length1":16,"length2":36},{"diffs":[[0,"c.pause("],[-1,"2"],[1,"1"],[0,"00)\n    "]],"start1":342,"start2":342,"length1":17,"length2":17},{"diffs":[[0,"c.pause("],[-1,"2"],[1,"1"],[0,"000)\n})"]],"start1":437,"start2":437,"length1":16,"length2":16}]},{"type":"added","filename":"main.blocks","value":"<xml xmlns=\"http://www.w3.org/1999/xhtml\">\n  <block type=\"pxt-on-start\"></block>\n  <block type=\"device_forever\"></block>\n</xml>"}]}],"snapshots":[{"timestamp":1744172207641,"editorVersion":"7.0.61","text":{"main.blocks":"<xml xmlns=\"http://www.w3.org/1999/xhtml\">\n  <block type=\"pxt-on-start\"></block>\n  <block type=\"device_forever\"></block>\n</xml>","main.ts":"\n","README.md":"","pxt.json":"{\n    \"name\": \"pxt-st7032\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"radio\": \"*\",\n        \"microphone\": \"*\"\n    },\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\"\n    ],\n    \"additionalFilePaths\": []\n}\n"}},{"timestamp":1744174010108,"editorVersion":"7.0.61","text":{"main.ts":"basic.forever(function () {\n\t\n})\n","README.md":"","st7032.ts":"/**\n * lcd st7032 blocks\n */\n//% weight=100 color=#0fbc11 icon=\"\"\nnamespace st7032 {\n    let i2cAddress = 0x3f;\n    let topAddress = [0x00,0x40,0x14,0x54];\n\n    //% blockId=\"putCommand\"\n    export function putCommand(data: number) {\n        let buf = pins.createBuffer(2);\n        buf[0] = 0x00;\n        buf[1] = data >> 0;\n        pins.i2cWriteBuffer(i2cAddress, buf);\n    }\n\n    //% blockId=\"putData\"\n    export function putData(data: number) {\n        let buf = pins.createBuffer(2);\n        buf[0] = 0x40;\n        buf[1] = data;\n        pins.i2cWriteBuffer(i2cAddress, buf);\n    }\n\n    //% blockId=\"setAddress\"\n    export function setAddress(ad:number): void {\n        i2cAddress = ad;\n    }\n    /**\n     * initLcd\n     */\n    //% blockId=\"initLcd\"\n    export function initLcd(): void {\n        putCommand(0x38);\n        putCommand(0x01);\n        putCommand(0x02);\n        putCommand(0x0c);\n    }\n\n    //% blockId=\"setPosition\"\n    export function setPosition(x:number,y:number): void {\n        putCommand( 0x80 + )\n\n        let buf = pins.createBuffer(8);\n\n        pins.i2cWriteBuffer(i2cAddress, buf)\n    }\n}\n","pxt.json":"{\n    \"name\": \"pxt-st7032\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"radio\": \"*\",\n        \"microphone\": \"*\"\n    },\n    \"files\": [\n        \"main.ts\",\n        \"README.md\",\n        \"st7032.ts\"\n    ],\n    \"preferredEditor\": \"tsprj\"\n}\n"}}],"shares":[],"lastSaveTime":1744174890571}